/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3.1/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.25'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/

// 配置该项​​目的构建脚本
buildscript {
    ext {
        springBootVersion = '1.5.10.RELEASE'
    }
    // 配置构建脚本的存储库
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        maven { url 'http://repo2.maven.org/maven2' }
        maven { url 'http://repo.spring.io/plugins-release' }
        jcenter()
        mavenCentral()
    }
    // 配置构建脚本的依赖
    dependencies {
        // 提供额外的内置依赖管理支持
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:' + springBootVersion
    }
}

// 配置该项​​目的插件
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// 配置项目的JVM版本
sourceCompatibility = 1.8
targetCompatibility = 1.8

// 配置该项​​目的存储库
repositories {
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
    maven { url 'http://repo2.maven.org/maven2' }
    jcenter()
    mavenCentral()
}

// 配置项目的依赖管理
dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:Brussels-SR7'
    }
}

// 配置项目的依赖
dependencies {
    compile('org.springframework.boot:spring-boot-starter') {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-jdbc'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-cache'
    compile 'org.hibernate:hibernate-envers'
    compile 'com.h2database:h2'
    compile('io.springfox:springfox-swagger2:2.8.0') {
        exclude module: 'mapstruct'
    }
    compile 'io.springfox:springfox-bean-validators:2.8.0'
    compile 'io.jsonwebtoken:jjwt:0.9.0'
    compile 'commons-lang:commons-lang'
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
    testCompile 'org.springframework.security:spring-security-test'
}
